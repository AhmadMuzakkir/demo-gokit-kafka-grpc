version: '3.7'
services:
  server:
    build: .
    environment:
      KAFKA_ADDR: "kafka1:19092"
      PORT: 8001
      TOPIC: "message"
      DB: "/data/badger"
    ports:
      - "8001:8001"
    volumes:
      - type: volume
        source: server-data-badger
        target: /data/badger
    command:
      - bash
      - -c
      - |
        ./wait-for-it.sh -t 60 -h kafka1 -p 19092 -- \
        /server
    depends_on:
      - kafka1
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - type: volume
        source: zoo1-data
        target: /data
      - type: volume
        source: zoo1-datalog
        target: /datalog
  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - type: volume
        source: kafka1-data
        target: /var/lib/kafka/data
    depends_on:
      - zoo1
volumes:
  server-data-badger:
  zoo1-data:
  zoo1-datalog:
  kafka1-data: